// @ts-check

import eslint from '@eslint/js';
import jestPlugin from 'eslint-plugin-jest';
import reactHooksPlugin from 'eslint-plugin-react-hooks';
import reactRecommended from 'eslint-plugin-react/configs/recommended.js';
import tseslint from 'typescript-eslint';

export default tseslint.config(
  {
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommendedTypeChecked,
      ...tseslint.configs.stylisticTypeChecked,
    ],
    files: ['app/**/*.{ts,tsx}'],
    ignores: ['**/build/', 'app/proto/', '**/node_modules/'],
    plugins: {
      '@typescript-eslint': tseslint.plugin,
      'react-hooks': reactHooksPlugin,
      jest: jestPlugin,
    },
    languageOptions: {
      parser: tseslint.parser,
      parserOptions: {
        ecmaFeatures: { jsx: true },
        project: ['tsconfig.json', 'tsconfig.dev.json'],
      },
    },
    rules: {
      '@typescript-eslint/consistent-type-definitions': ['off'],
      '@typescript-eslint/prefer-nullish-coalescing': ['off'],
      'no-console': ['error'],
      'arrow-parens': ['error', 'as-needed'],
      '@typescript-eslint/no-misused-promises': [
        'error',
        { checksVoidReturn: { attributes: false } },
      ],
      ...reactHooksPlugin.configs.recommended.rules,
    },
  },
  {
    files: ['app/**/*.tsx}'],
    ...reactRecommended,
    settings: { react: { version: 'detect' } },
  },
  {
    files: ['**/test/**'],
    ...jestPlugin.configs['flat/recommended'],
  }
);
